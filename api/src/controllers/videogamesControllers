const axios = require("axios");
require("dotenv").config();
const { API_KEY } = process.env;
const { Videogame, Genre, Platform } = require("../db");
const infoCleaner = require("../utils/genericFunctions");
const { Sequelize } = require("sequelize");
const { Op } = require("sequelize");

const createVideogameDB = async (name, description, platform, image, release, rating, genres) => {
    try {
        
        // if (name && description && platform && image && release && rating && genres) {console.log(name)
            const existe = await Videogame.findOne({
                where: { name: name }
            })
            if (!existe) {
                const newVideogame = await Videogame.create({
                    name,
                    description,
                    image,
                    platform,
                    genres,
                    release,
                    rating,
                    created: true
                })
    
                const genresDB = await Genre.findAll({
                    where: { name: genres }
                })
    
                const platformsDB = await Platform.findAll({
                    where: { name: platform }
                })
                
    ;
                // newVideogame.addGenre(genresDB)
                // newVideogame.addPlatform(platformsDB)
                return newVideogame;
    
            }
        // }
    } catch (error) {
        console.log(error)
    }
}
//     const newVideogame = await Videogame.create({ name, description, platform, image, release, rating });

//     return newVideogame;
// }

const getVideogameById = async (id, source) => {
    try {
        const infoApi = [];
        const videogame = source === "api"
            ?
            infoApi.push((await axios.get(`https://api.rawg.io/api/games/${id}?key=${API_KEY}`))
                .data)
            : await Videogame.findByPk(id);
        return infoCleaner(infoApi);
    } catch (error) {
        console.log(error)
    }
}

const getAllVideogames = async () => {
    const videogameDB = await Videogame.findAll();
    const infoApi = [];
    infoApi.push((await axios(`https://api.rawg.io/api/games?key=${API_KEY}`) // https://jsonplaceholder.typicode.com/users/
    ).data);

    const videogameApi = infoCleaner(infoApi[0].results);

    const first15Videogames = [...videogameApi.slice(0, 15)];

    return [...videogameDB, ...first15Videogames]; // esto junta los dos arrays
}

const getVideogameByName = async (videogame) => {
    try {
        const infoApi = (await axios.get(`https://api.rawg.io/api/games?search=${videogame}&key=${API_KEY}`) // https://jsonplaceholder.typicode.com/users/
        ).data;

        const videogameApi = infoCleaner(infoApi.results);

        function buscarObjeto(nombre) {
            let minusculas = videogame;
            return nombre.name.toLowerCase() === minusculas.toLowerCase();
        }

        let results = await videogameApi.find(buscarObjeto);

        // let results = await videogameApi.findAll({
        //     where: {
        //         [Sequelize.Op.iLike]: {name: `%${videogame}`}
        //     }
        // }); 

        const videogameDB = await Videogame.findAll({ where: { name: videogame } });

        if (results) return [results, ...videogameDB]

    } catch (error) {
        return { error: error.message }
    }
}

module.exports = { createVideogameDB, getVideogameById, getAllVideogames, getVideogameByName };